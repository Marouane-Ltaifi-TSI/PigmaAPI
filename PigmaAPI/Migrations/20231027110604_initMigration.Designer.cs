// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PigmaAPI.Infrastructure.ApplicationDbContext;

#nullable disable

namespace PigmaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231027110604_initMigration")]
    partial class initMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PigmaAPI.Entities.CompanyAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalAddress")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Adress")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Bic")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Iban")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("MeansOfPayment")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<int?>("PostalCode")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("VilleID")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyAgencies");
                });

            modelBuilder.Entity("PigmaAPI.Entities.CompanyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<int?>("CompanyAgencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAgencyId");

                    b.ToTable("CompanyContacts");
                });

            modelBuilder.Entity("PigmaAPI.Entities.CompanyContact", b =>
                {
                    b.HasOne("PigmaAPI.Entities.CompanyAgency", "CompanyAgencyNavigation")
                        .WithMany("CompanyContact")
                        .HasForeignKey("CompanyAgencyId")
                        .HasConstraintName("FK_CompanyContact");

                    b.Navigation("CompanyAgencyNavigation");
                });

            modelBuilder.Entity("PigmaAPI.Entities.CompanyAgency", b =>
                {
                    b.Navigation("CompanyContact");
                });
#pragma warning restore 612, 618
        }
    }
}
